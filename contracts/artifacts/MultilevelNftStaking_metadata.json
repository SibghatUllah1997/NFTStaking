{
	"compiler": {
		"version": "0.8.16+commit.07a7930e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lockPeriod",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_wave",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "collection",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "rewardToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "rewardPerWave",
						"type": "uint256"
					}
				],
				"name": "AddStaking",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lockPeriod",
						"type": "uint256"
					}
				],
				"name": "LockPeriodUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "tokenIds",
						"type": "uint256[]"
					}
				],
				"name": "NFTLocked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "tokenIds",
						"type": "uint256[]"
					}
				],
				"name": "NFTUnLocked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "tokenIds",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "rewards",
						"type": "uint256"
					}
				],
				"name": "RewardsClaimed",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "WAVE",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_stakeNFT",
						"type": "address[]"
					},
					{
						"internalType": "address[]",
						"name": "_rewardsToken",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_rewardPerWave",
						"type": "uint256[]"
					}
				],
				"name": "addStakingNfts",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "_tokenIds",
						"type": "uint256[]"
					},
					{
						"internalType": "contract IERC721",
						"name": "nftAddress",
						"type": "address"
					}
				],
				"name": "claimRewards",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					},
					{
						"internalType": "contract IERC721",
						"name": "nftAddress",
						"type": "address"
					}
				],
				"name": "claimedRewards",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC721",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "lockInfo",
				"outputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "lockedTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "claimedRewards",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "isUnlocked",
						"type": "bool"
					},
					{
						"internalType": "contract IERC721",
						"name": "contractAddress",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "_tokenIds",
						"type": "uint256[]"
					},
					{
						"internalType": "contract IERC721",
						"name": "nftAddress",
						"type": "address"
					}
				],
				"name": "lockNFT",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lockPeriod",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC721",
						"name": "",
						"type": "address"
					}
				],
				"name": "nftInfo",
				"outputs": [
					{
						"internalType": "contract IRewardsToken",
						"name": "rewardsToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "rewardsPerWave",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "rewardPercentage",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lockPeriod",
						"type": "uint256"
					}
				],
				"name": "setLockPeriod",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "_tokenIds",
						"type": "uint256[]"
					},
					{
						"internalType": "contract IERC721",
						"name": "nftAddress",
						"type": "address"
					}
				],
				"name": "unlockNFT",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addStakingNfts(address[],address[],uint256[])": {
					"details": "add the address NFT staking addresses and their corresponders",
					"params": {
						"_stakeNFT": ", _rewardsToken, _rewardPerWave, _rewardPercentage"
					}
				},
				"claimRewards(uint256[],address)": {
					"details": "claim rewards",
					"params": {
						"_tokenIds": "token ids to unlock"
					}
				},
				"claimedRewards(uint256,address)": {
					"details": "get total claimed rewards for token id",
					"params": {
						"_tokenId": "token id to get claimed Rewards amount"
					}
				},
				"lockNFT(uint256[],address)": {
					"details": "lock NFT into the contract",
					"params": {
						"_tokenIds": "token ids to stake"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"setLockPeriod(uint256)": {
					"details": "update lock period",
					"params": {
						"_lockPeriod": "lock period to set"
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"unlockNFT(uint256[],address)": {
					"details": "unlock NFT from the contract",
					"params": {
						"_tokenIds": "token ids to unlock"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"WAVE()": {
					"notice": "CONSTANTS "
				},
				"setLockPeriod(uint256)": {
					"notice": "SETTERS "
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/MultilevelNftStaking.sol": "MultilevelNftStaking"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
			"license": "MIT",
			"urls": [
				"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
				"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935",
			"license": "MIT",
			"urls": [
				"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2",
				"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f",
			"license": "MIT",
			"urls": [
				"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f",
				"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
			"license": "MIT",
			"urls": [
				"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
				"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"contracts/MultilevelNftStaking.sol": {
			"keccak256": "0x9d9accd86c6fc4d751cdf120504be985d814b0e6cbb26838a718f4dffb4e798e",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://29f4c2898a251897cf0c366adc8c9b6716ae9357bc86f06dffe5a6ac15ff9ed5",
				"dweb:/ipfs/QmbvoM5oU7orjt25SUCYcuKFc55k1Sno8C4J4AiTdY3h9p"
			]
		},
		"contracts/interfaces/IRewardsToken.sol": {
			"keccak256": "0xea3022452f5873be996a2d4e64e92f299e171e6eb62442504cbbdac8d3f3a22e",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://5314dcbd12c11ff69823ed2c1b71beed88d8ce352cfff91b02d4ca2a6577d343",
				"dweb:/ipfs/QmdB11KJ8Kq8z6GqhE19tnrqb83LLsbMJmZRo8dqnhwxm4"
			]
		}
	},
	"version": 1
}